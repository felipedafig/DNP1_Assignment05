@page "/users"
@rendermode InteractiveServer

@using Shared.DTOs.Users
@using BlazorApp.Services
@inject IUserService UserService
@inject NavigationManager NavigationManager

<PageTitle>Users</PageTitle>

<h1>User List</h1>
<hr />

<div class="d-flex justify-content-between align-items-center mb-3">

    <div>
        <a href="/adduser" class="btn btn-success">
            <i class="bi bi-plus"></i> Add New User
        </a>
    </div>
</div>

@if (IsLoading)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading users...</p>
    </div>
}
else if (ErrorMessage is not null)
{
    <div class="alert alert-danger">
        <h5>Error Loading Users</h5>
        <p>@ErrorMessage</p>
        <button class="btn btn-outline-danger" @onclick="LoadUsers">Try Again</button>
    </div>
}
else if (UserList is null || !UserList.Any())
{
    <div class="alert alert-info">
        <h5>No Users Found</h5>
        <p>There are no users in the system yet.</p>
        <a href="/adduser" class="btn btn-primary">Add First User</a>
    </div>
}
else
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">All Users (@UserList.Count)</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Username</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in UserList)
                                {
                                    <tr>
                                        <td>
                                            <span >@user.Id</span>
                                        </td>
                                        <td>
                                            @user.Username
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<UserDto>? UserList;
    private string? ErrorMessage;
    private bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        IsLoading = true;
        ErrorMessage = null;
        StateHasChanged();

        try
        {
            UserList = await UserService.GetManyUsersAsync();
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Failed to load users: {ex.Message}";
            UserList = null;
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

}
